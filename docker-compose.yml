version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_DB: livraria
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"

  eureka:
    build: springcloud/eurekaserver
    ports:
      - "8761:8761"


  mylibrary:
    build:
      context: ./mylibrary/
      dockerfile: Dockerfile
    container_name: mylibrary-container
    depends_on:
      - postgres
      - redis
      - kafka
      - eureka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/livraria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_KAFKA_URL: kafka:9092

  recomendacoes:
    build:
      context: ./recomendacoes/
      dockerfile: Dockerfile
    container_name: recomendacoes-container
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/livraria
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_URL: kafka:9092
    depends_on:
      - postgres
      - kafka
      - zookeeper
      - eureka


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper


  gateway:
    build:
      context: springcloud/apigateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"